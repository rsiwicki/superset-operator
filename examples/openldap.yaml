#  Run on openldap Pod:
#  ldapsearch -H ldap://openldap.default.svc.cluster.local:1389 -D cn=admin,dc=example,dc=org -w admin -b ou=users,dc=example,dc=org
#
#    cat << 'EOF' | ldapadd  -H ldap://openldap.default.svc.cluster.local:1389 -D cn=admin,dc=example,dc=org -w admin
#  dn: cn=superset,ou=users,dc=example,dc=org
#  objectClass: inetOrgPerson
#  objectClass: posixAccount
#  objectClass: shadowAccount
#  cn: superset
#  uid: superset
#  givenName: Apache
#  sn: Superset
#  mail: superset@apache.com
#  uidNumber: 16859
#  gidNumber: 100
#  homeDirectory: /home/superset
#  loginShell: /bin/bash
#  userPassword: {crypt}x
#  shadowLastChange: 0
#  shadowMax: 0
#  shadowWarning: 0
#    EOF
#
#    ldappasswd -H ldap://openldap.default.svc.cluster.local:1389 -D cn=admin,dc=example,dc=org -w admin -s superset "cn=superset,ou=users,dc=example,dc=org"

apiVersion: apps/v1
kind: Deployment
metadata:
  name: openldap
  labels:
    app.kubernetes.io/name: openldap
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: openldap
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: openldap
    spec:
      containers:
        - name: openldap
          image: docker.io/bitnami/openldap:latest
          imagePullPolicy: Always
          env:
            - name: LDAP_ADMIN_USERNAME
              value: admin
            - name: LDAP_ADMIN_PASSWORD
              value: admin
          ports:
            - name: tcp-ldap
              containerPort: 1389
---
apiVersion: v1
kind: Service
metadata:
  name: openldap
  labels:
    app.kubernetes.io/name: openldap
spec:
  type: ClusterIP
  ports:
    - name: tcp-ldap
      port: 1389
      targetPort: tcp-ldap
  selector:
    app.kubernetes.io/name: openldap
