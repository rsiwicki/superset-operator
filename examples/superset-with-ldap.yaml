# helm repo add bitnami https://charts.bitnami.com/bitnami
# helm install superset bitnami/postgresql --set auth.username=superset --set auth.password=superset --set auth.database=superset # pragma: allowlist secret
#
# helm repo add stackable https://repo.stackable.tech/repository/helm-stable/
# helm install secret-operator stackable/secret-operator
---
apiVersion: v1
kind: Secret
metadata:
  name: superset-with-ldap-credentials
type: Opaque
stringData:
  adminUser.username: admin
  adminUser.firstname: Superset
  adminUser.lastname: Admin
  adminUser.email: admin@superset.com
  adminUser.password: admin # pragma: allowlist secret
  connections.secretKey: thisISaSECRET_1234 # pragma: allowlist secret
  connections.sqlalchemyDatabaseUri: postgresql://superset:superset@superset-postgresql.default.svc.cluster.local/superset # pragma: allowlist secret
---
apiVersion: authentication.stackable.tech/v1alpha1
kind: AuthenticationClass
metadata:
  name: myldap
spec:
  protocol:
    ldap:
      hostname: openldap.default.svc.cluster.local
      port: 1389
      domain: ou=users,dc=example,dc=org
      bindCredentials:
        secretClass: superset-with-ldap-ldap-bind-secret-class # pragma: allowlist secret
#        scope:
#          node: true
#          pod: true
#          services:
#            - myservice
---
apiVersion: secrets.stackable.tech/v1alpha1
kind: SecretClass
metadata:
  name: superset-with-ldap-ldap-bind-secret-class
spec:
  backend:
    k8sSearch:
      searchNamespace:
        pod: {}
---
apiVersion: v1
kind: Secret
metadata:
  name: superset-with-ldap-ldap-bind
  labels:
    secrets.stackable.tech/class: superset-with-ldap-ldap-bind-secret-class
stringData:
  user: cn=admin,dc=example,dc=org
  password: admin # pragma: allowlist secret
---
apiVersion: superset.stackable.tech/v1alpha1
kind: SupersetCluster
metadata:
  name: superset-with-ldap
spec:
  version: 1.4.1
  statsdExporterVersion: v0.22.4
  credentialsSecret: superset-with-ldap-credentials # pragma: allowlist secret
  loadExamplesOnInit: true
  nodes:
    roleGroups:
      default:
        config:
  authenticationConfig:
    methods:
      - authenticationClass: myldap
